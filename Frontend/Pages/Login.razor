@page "/login"
@using BusinessLogic.Models

@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IJSRuntime JsRuntime

<h3>Login</h3>

<div class="form-group">
    <label for="username">Username:</label>
    <input id="username" type="text" class="form-control" @bind="@Username" />
</div>

<div class="form-group">
    <label for="password">Password:</label>
    <input id="password" type="password" class="form-control" @bind="@Password" />
</div>

<button class="btn btn-primary" @onclick="HandleLogin">Login</button>

<p><a href="#">Forgot Password?</a></p>

<p>Don't have an account? <NavLink href="/register">Register</NavLink></p>

@code {
    private string Username { get; set; }
    private string Password { get; set; }

    private async Task HandleLogin()
    {
    // Criar loginModel object
        var user = new LoginModel
        {
            Username = Username,
            Password = Password
        };

    // HTTP para a logica do login
        var response = await HttpClient.PostAsJsonAsync("http://localhost:5052/api/Auth/token", user);

        if (response.IsSuccessStatusCode)
        {
    // Login com sucesso ir buscar o token gerado
            var result = await response.Content.ReadFromJsonAsync<TokenResponse>();
            var token = result.Token;

    // Guardar o token no browsers localstorage
            await JsRuntime.InvokeVoidAsync("localStorage.setItem", "token", token);

    // Ir para a home page
            NavigationManager.NavigateTo("/home");
        }
        else
        {
    // Login failed, display an error message

        }
    }
}